import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
class BoardSolutionTest {

    private final BoardSolution boardSolution = new BoardSolution();

    @Test
    void isValidBoardTest() {
        char[][] case1 = new char[0][];
        char[][] case2 = {
                {'1', '.', '.'},
                {'.', '2', '.'},
                {'.', '.', '3'}
        };
        char[][] case3 = {
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'}
        };
        char[][] case4 = {
                {'1', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '2', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '3', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '4', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '5', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '6', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '7', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '8', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '9'}
        };
        char[][] case5 = {
                {'1', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'2', '2', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '3', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '4', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '5', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '6', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '7', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '8', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '9'}
        };
        char[][] case6 = {
                {'1', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'Q', '2', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '3', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '4', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '5', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '6', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '7', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '8', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '9'}
        };
        char[][] case7 = {
                {'1', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'3', '2', '.', '.', '.', '.', '.', '.', '1'},
                {'.', '.', '3', '.', '6', '.', '.', '.', '.'},
                {'.', '.', '.', '4', '.', '.', '.', '.', '.'},
                {'.', '.', '2', '.', '5', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '6', '.', '7', '.'},
                {'.', '.', '.', '.', '.', '.', '7', '.', '.'},
                {'.', '5', '.', '.', '.', '.', '.', '8', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '9'}
        };

        assertEquals(false, boardSolution.isValidBoard(case1));
        assertEquals(false, boardSolution.isValidBoard(case2));
        assertEquals(false, boardSolution.isValidBoard(case3));
        assertEquals(false, boardSolution.isValidBoard(case4));
        assertEquals(true, boardSolution.isValidBoard(case5));
        assertEquals(false, boardSolution.isValidBoard(case6));
        assertEquals(true, boardSolution.isValidBoard(case7));

    }


}